#!/bin/sh
# vim: syntax=sh tabstop=8 expandtab shiftwidth=4 softtabstop=4
# Copyright 2012 The Go Authors. All rights reserved.
# Use of this source code is governed by a BSD-style
# license that can be found in the LICENSE file.

# git gofmt pre-commit hook
#
# To use, store as .git/hooks/pre-commit inside your repository and make sure
# it has execute permissions.
#
# This script does not handle file names that contain spaces.
if [ ! -d ./.git ]; then
    echo "You must commit your project from the root, so the hooks run properly. Exiting."
    exit 1
fi

gofiles=$(git diff --cached --name-only --diff-filter=ACM | grep '.go$')
[ -z "$gofiles" ] && exit 0

unformatted=$(gofmt -l $gofiles)
if [ -z "$unformatted" ]; then
    echo >&2 "All go files are formatted properly using git fmt"
else
    echo >&2 "COMMIT FAILED::::::::::::::: Go files must be formatted with gofmt. The following go files did not pass go fmt check: "
    for fn in $unformatted; do
        echo >&2 "  $PWD/$fn"
    done
    echo >&2 'Please run "go fmt ." in the project root to format all files'
    exit 1
fi

# Run on one file at a time because a single invocation of "go tool vet"
# with multiple files requires the files to all be in one package.
for gofile in $gofiles
do
   if ! go tool vet $vetflags $gofile 2>&1; then
      errors=YES
   fi
done

[ -z  "$errors" ] && echo >&2 "The code passed go vet checking" && echo "Git pre-commit hook passed successfully" && exit 0

echo >&2 "COMMIT FAILED::::::::::::::: There were issues found running go vet on the code."
exit 1
